# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-15 16:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(help_text=b'Headline for timeline', max_length=200)),
                ('type', models.CharField(default=b'default', max_length=50)),
                ('start_date', models.DateField(blank=True, help_text=b'Timeline start date')),
                ('text', models.TextField(blank=True, help_text=b'Description of timeline')),
                ('asset_media', models.CharField(blank=True, help_text=b'Media to add to even info: Picutre link, YouTube, Wikipedia, etc.', max_length=200, verbose_name=b'media')),
                ('asset_credit', models.CharField(blank=True, help_text=b'Media credits here', max_length=200, verbose_name=b'credit')),
                ('asset_caption', models.CharField(blank=True, help_text=b'Caption for media', max_length=200, verbose_name=b'caption')),
            ],
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text=b'Event start date')),
                ('end_date', models.DateField(blank=True, help_text=b'Event end date', null=True)),
                ('headline', models.CharField(blank=True, help_text=b'Headline for event', max_length=200)),
                ('text', models.TextField(blank=True, help_text=b'Text description of event')),
                ('asset_media', models.CharField(blank=True, help_text=b'Media to add to even info: Picutre link, YouTube, Wikipedia, etc.', max_length=200, verbose_name=b'media')),
                ('asset_credit', models.CharField(blank=True, help_text=b'Media credits here', max_length=200, verbose_name=b'credit')),
                ('asset_caption', models.CharField(blank=True, help_text=b'Caption for media', max_length=200, verbose_name=b'caption')),
            ],
        ),
        migrations.CreateModel(
            name='TimelineOptions',
            fields=[
                ('timeline', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='timelinejs.Timeline')),
                ('width', models.CharField(default=b'100%', help_text=b'Width of timeline DIV', max_length=10)),
                ('height', models.CharField(default=b'600', help_text=b'Height of timeline DIV', max_length=10)),
                ('embed_id', models.CharField(blank=True, help_text=b'ID of timeline DIV', max_length=20)),
                ('start_at_end', models.BooleanField(default=False, help_text=b'Set to true to start the timeline on the last date. default is false')),
                ('start_at_slide', models.IntegerField(default=0, help_text=b'You can tell TimelineJS to start at a specific slide number default is 0')),
                ('start_zoom_adjust', models.IntegerField(default=0, help_text=b'This will tweak the default zoom level. Equivalent to pressing the zoom in or zoom out button the specified number of times. Negative numbers zoom out. default is 0')),
                ('hash_bookmark', models.BooleanField(default=False, help_text=b'set to true to allow bookmarking slides using the hash tag default is false')),
                ('font', models.CharField(choices=[(b'Arvo-PTSans', b'Arvo-PTSans'), (b'Merriweather-NewsCycle', b'Merriweather-NewsCycle'), (b'PoiretOne-Molengo', b'PoiretOne-Molengo'), (b'PTSerif-PTSans', b'PTSerif-PTSans'), (b'DroidSerif-DroidSans', b'DroidSerif-DroidSans'), (b'Lekton-Molengo', b'Lekton-Molengo'), (b'NixieOne-Ledger', b'NixieOne-Ledger'), (b'AbrilFatface-Average', b'AbrilFatface-Average'), (b'PlayfairDisplay-Muli', b'PlayfairDisplay-Muli'), (b'Rancho-Gudea', b'Rancho-Gudea'), (b'Bevan-PotanoSans', b'Bevan-PotanoSans'), (b'BreeSerif-OpenSans', b'BreeSerif-OpenSans'), (b'SansitaOne-Kameron', b'SansitaOne-Kameron'), (b'Pacifico-Arimo', b'Pacifico-Arimo')], default=b'Bevan-PotanoSans', help_text=b'Font combination options', max_length=50)),
                ('debug', models.BooleanField(default=False, help_text=b'Will log events etc to the console. default is false')),
                ('lang', models.CharField(choices=[(b'en', 'English'), (b'fr', 'Fran\xe7ais'), (b'es', 'Espa\xf1ol'), (b'de', 'Deutsch'), (b'it', 'Italiano'), (b'pt-br', 'Portugu\xeas Brazil'), (b'pt', 'Portugu\xeas'), (b'nl', 'Dutch'), (b'cz', 'Czech'), (b'no', 'Norwegian'), (b'dk', 'Danish'), (b'id', 'Indonesian'), (b'pl', 'Polish'), (b'sl', 'Slovenian'), (b'ru', 'Russian'), (b'sk', 'Slovak'), (b'is', 'Icelandic'), (b'fo', 'Faroese'), (b'kr', '\uc6d4\uc694\uc77c'), (b'ja', '\u65e5\u672c\u8a9e'), (b'zh-ch', '\u4e2d\u6587'), (b'zh-tw', 'Taiwanese Mandarin'), (b'ta', '\u0ba4\u0bae\u0bbf\u0bb4\u0bcd - Tamil'), (b'ar', 'Arabic'), (b'mn', 'Mongolian')], default=b'en', help_text=b'Localization options. default is English', max_length=6)),
                ('maptype', models.CharField(choices=[(b'Stamen Maps', b'Stamen Maps'), (b'toner', b'toner'), (b'toner-lines', b'toner-lines'), (b'toner-labels', b'toner-labels'), (b'watercolor', b'watercolor'), (b'sterrain', b'sterrain'), (b'Google Maps', b'Google Maps'), (b'ROADMAP', b'ROADMAP'), (b'TERRAIN', b'TERRAIN'), (b'HYBRID', b'HYBRID'), (b'SATELLITE', b'SATELLITE')], default=b'watercolor', help_text=b'google maps api needed [todo]', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Timeline Options',
            },
        ),
        migrations.AddField(
            model_name='timelineevent',
            name='timeline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timelinejs.Timeline'),
        ),
    ]
